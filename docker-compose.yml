version: "3.9"

services:
  db:
    image: postgres:12.3-alpine
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=feedze
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "feedze" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure
  web:
    build: .
    command: sh -c "python manage.py migrate && gunicorn feedze.wsgi -b 0.0.0.0:8000"
    depends_on:
      - db
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - .env
  rabbitmq:
    hostname: rabbit
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=pass4root
      - RABBITMQ_DEFAULT_VHOST=feedze
    ports:
      - 5673:5672
      - 15673:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A feedze worker -l INFO"
    depends_on:
      - rabbitmq
      - db
    links:
      - "db:database"
      - "rabbitmq:rabbitmq"
    env_file:
      - .env
    restart: on-failure
  celery_worker_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A feedze beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - rabbitmq
      - db
    links:
      - "db:database"
      - "rabbitmq:rabbitmq"
    env_file:
      - .env
    restart: on-failure
